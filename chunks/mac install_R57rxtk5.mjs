const id = "mac install.md";
						const collection = "blog";
						const slug = "mac-install";
						const body = "\n> mac 系统重装之后 开发的必要品\n\n## App\n[vscode](https://code.visualstudio.com/)\n```bash\n# 系统设置\n{\n  // ========== Visuals ==========\n  \"editor.cursorSmoothCaretAnimation\": \"on\",\n  \"editor.fontFamily\": \"Input Mono, monospace\",\n  \"editor.guides.bracketPairs\": \"active\",\n  \"editor.lineNumbers\": \"interval\",\n  \"editor.renderWhitespace\": \"boundary\",\n  \"window.autoDetectColorScheme\": true,\n  \"workbench.colorTheme\": \"Vitesse Dark\",\n  \"workbench.editor.tabActionLocation\": \"left\",\n  \"workbench.fontAliasing\": \"antialiased\",\n  \"workbench.iconTheme\": \"catppuccin-mocha\",\n  \"workbench.list.smoothScrolling\": true,\n  \"workbench.preferredDarkColorTheme\": \"Vitesse Dark\",\n  \"workbench.preferredLightColorTheme\": \"Vitesse Light\",\n  \"workbench.productIconTheme\": \"icons-carbon\",\n  \"workbench.sideBar.location\": \"right\",\n  \"workbench.startupEditor\": \"newUntitledFile\",\n  \"workbench.tree.expandMode\": \"singleClick\",\n  \"workbench.tree.indent\": 10,\n\n  // ========== Editor ========== \n  \"debug.onTaskErrors\": \"debugAnyway\",\n  \"diffEditor.ignoreTrimWhitespace\": false,\n  \"editor.wordSeparators\": \"`~!@#%^&*()=+[{]}\\\\|;:'\\\",.<>/?\",\n  \"editor.find.addExtraSpaceOnTop\": false,\n  \"editor.inlineSuggest.enabled\": true,\n  \"editor.multiCursorModifier\": \"ctrlCmd\",\n  \"editor.suggestSelection\": \"first\",\n  \"editor.tabSize\": 2,\n  \"editor.unicodeHighlight.invisibleCharacters\": false,\n  \"editor.stickyScroll.enabled\": true,\n  \"editor.hover.sticky\": true,\n  \"editor.codeActionsOnSave\": {\n    \"source.fixAll\": \"never\",\n    \"source.fixAll.eslint\": \"explicit\",\n    \"source.organizeImports\": \"never\"\n  },\n  \"explorer.confirmDelete\": false,\n  \"explorer.confirmDragAndDrop\": false,\n  \"files.eol\": \"\\n\",\n  \"files.insertFinalNewline\": true,\n  \"files.simpleDialog.enable\": true,\n  \"git.autofetch\": true,\n  \"git.confirmSync\": false,\n  \"git.enableSmartCommit\": true,\n  \"git.untrackedChanges\": \"separate\",\n  \"scm.diffDecorationsGutterWidth\": 2,\n  \"terminal.integrated.cursorBlinking\": true,\n  \"terminal.integrated.cursorStyle\": \"line\",\n  \"terminal.integrated.fontWeight\": \"300\",\n  \"terminal.integrated.persistentSessionReviveProcess\": \"never\",\n  \"terminal.integrated.tabs.enabled\": true,\n  \"workbench.editor.closeOnFileDelete\": true,\n  \"workbench.editor.highlightModifiedTabs\": true,\n  \"workbench.editor.limit.enabled\": true,\n  \"workbench.editor.limit.perEditorGroup\": true,\n  \"workbench.editor.limit.value\": 5,\n  \"search.exclude\": {\n    \"**/*.snap\": true,\n    \"**/*.svg\": true,\n    \"**/.git\": true,\n    \"**/.github\": false,\n    \"**/.nuxt\": true,\n    \"**/.output\": true,\n    \"**/.pnpm\": true,\n    \"**/.vscode\": true,\n    \"**/.yarn\": true,\n    \"**/assets\": true,\n    \"**/bower_components\": true,\n    \"**/dist/**\": true,\n    \"**/logs\": true,\n    \"**/node_modules\": true,\n    \"**/out/**\": true,\n    \"**/package-lock.json\": true,\n    \"**/pnpm-lock.yaml\": true,\n    \"**/public\": true,\n    \"**/temp\": true,\n    \"**/yarn.lock\": true,\n    \"**/CHANGELOG*\": true,\n    \"**/LICENSE*\": true,\n  },\n\n  // ==========  Global Level Config, needs to put in User Settings ========== \n  \"window.dialogStyle\": \"custom\",\n  \"window.nativeTabs\": true, // this is great, macOS only\n  \"window.title\": \"${rootName}\", // this make tabs more readable\n  \"window.titleBarStyle\": \"custom\",\n  \"extensions.autoUpdate\": \"onlyEnabledExtensions\",\n\n  // ========== Extension configs ========== \n  \"emmet.showSuggestionsAsSnippets\": true,\n  \"emmet.triggerExpansionOnTab\": false,\n  \"errorLens.enabledDiagnosticLevels\": [\n    \"warning\",\n    \"error\"\n  ],\n  \"errorLens.excludeBySource\": [\n    \"cSpell\",\n    \"Grammarly\",\n    \"eslint\"\n  ],\n\n  // ESLint config: https://github.com/antfu/eslint-config\n  \"eslint.codeAction.showDocumentation\": {\n    \"enable\": true\n  },\n  \"eslint.quiet\": true,\n  // Silent the stylistic rules in you IDE, but still auto fix them\n  \"eslint.rules.customizations\": [\n    { \"rule\": \"style/*\", \"severity\": \"off\" },\n    { \"rule\": \"format/*\", \"severity\": \"off\" },\n    { \"rule\": \"*-indent\", \"severity\": \"off\" },\n    { \"rule\": \"*-spacing\", \"severity\": \"off\" },\n    { \"rule\": \"*-spaces\", \"severity\": \"off\" },\n    { \"rule\": \"*-order\", \"severity\": \"off\" },\n    { \"rule\": \"*-dangle\", \"severity\": \"off\" },\n    { \"rule\": \"*-newline\", \"severity\": \"off\" },\n    { \"rule\": \"*quotes\", \"severity\": \"off\" },\n    { \"rule\": \"*semi\", \"severity\": \"off\" }\n  ],\n  \"eslint.validate\": [\n    \"javascript\",\n    \"javascriptreact\",\n    \"typescript\",\n    \"typescriptreact\",\n    \"vue\",\n    \"html\",\n    \"markdown\",\n    \"json\",\n    \"jsonc\",\n    \"yaml\",\n    \"toml\"\n  ],\n\n  \"github.copilot.enable\": {\n    \"*\": true,\n    \"markdown\": true,\n    \"plaintext\": false,\n  },\n  \"cSpell.allowCompoundWords\": true,\n  \"cSpell.language\": \"en,en-US\",\n  \"css.lint.hexColorLength\": \"ignore\",\n  \"githubIssues.workingIssueFormatScm\": \"#${issueNumberLabel}\",\n  \"githubPullRequests.fileListLayout\": \"tree\",\n  \"gitlens.codeLens.authors.enabled\": false,\n  \"gitlens.codeLens.enabled\": false,\n  \"gitlens.codeLens.recentChange.enabled\": false,\n  \"gitlens.menus\": {\n    \"editor\": {\n      \"blame\": false,\n      \"clipboard\": true,\n      \"compare\": true,\n      \"history\": false,\n      \"remote\": false\n    },\n    \"editorGroup\": {\n      \"blame\": true,\n      \"compare\": false\n    },\n    \"editorTab\": {\n      \"clipboard\": true,\n      \"compare\": true,\n      \"history\": true,\n      \"remote\": true\n    },\n    \"explorer\": {\n      \"clipboard\": true,\n      \"compare\": true,\n      \"history\": true,\n      \"remote\": true\n    },\n    \"scm\": {\n      \"authors\": true\n    },\n    \"scmGroup\": {\n      \"compare\": true,\n      \"openClose\": true,\n      \"stash\": true\n    },\n    \"scmGroupInline\": {\n      \"stash\": true\n    },\n    \"scmItem\": {\n      \"clipboard\": true,\n      \"compare\": true,\n      \"history\": true,\n      \"remote\": false,\n      \"stash\": true\n    }\n  },\n  \"i18n-ally.autoDetection\": false,\n  \"i18n-ally.displayLanguage\": \"en\",\n  \"i18n-ally.ignoredLocales\": [],\n  \"iconify.annotations\": true,\n  \"iconify.inplace\": true,\n  \"svg.preview.mode\": \"svg\",\n\n  // I only use Prettier for manually formatting\n  \"prettier.enable\": false,\n  \"prettier.printWidth\": 200,\n  \"prettier.semi\": false,\n  \"prettier.singleQuote\": true,\n\n  // ========== File Nesting ==========\n  // this might not be up to date with the repo, please check yourself\n  // https://github.com/antfu/vscode-file-nesting-config\n  \"explorer.fileNesting.enabled\": true,\n  \"explorer.fileNesting.expand\": false,\n  \"explorer.fileNesting.patterns\": {\n    \"*.asax\": \"$(capture).*.cs, $(capture).*.vb\",\n    \"*.ascx\": \"$(capture).*.cs, $(capture).*.vb\",\n    \"*.ashx\": \"$(capture).*.cs, $(capture).*.vb\",\n    \"*.aspx\": \"$(capture).*.cs, $(capture).*.vb\",\n    \"*.bloc.dart\": \"$(capture).event.dart, $(capture).state.dart\",\n    \"*.c\": \"$(capture).h\",\n    \"*.cc\": \"$(capture).hpp, $(capture).h, $(capture).hxx\",\n    \"*.cjs\": \"$(capture).cjs.map, $(capture).*.cjs, $(capture)_*.cjs\",\n    \"*.component.ts\": \"$(capture).component.html, $(capture).component.spec.ts, $(capture).component.css, $(capture).component.scss, $(capture).component.sass, $(capture).component.less\",\n    \"*.cpp\": \"$(capture).hpp, $(capture).h, $(capture).hxx\",\n    \"*.cs\": \"$(capture).*.cs\",\n    \"*.cshtml\": \"$(capture).cshtml.cs\",\n    \"*.csproj\": \"*.config, *proj.user, appsettings.*, bundleconfig.json\",\n    \"*.css\": \"$(capture).css.map, $(capture).*.css\",\n    \"*.cxx\": \"$(capture).hpp, $(capture).h, $(capture).hxx\",\n    \"*.dart\": \"$(capture).freezed.dart, $(capture).g.dart\",\n    \"*.ex\": \"$(capture).html.eex, $(capture).html.heex, $(capture).html.leex\",\n    \"*.go\": \"$(capture)_test.go\",\n    \"*.java\": \"$(capture).class\",\n    \"*.js\": \"$(capture).js.map, $(capture).*.js, $(capture)_*.js\",\n    \"*.jsx\": \"$(capture).js, $(capture).*.jsx, $(capture)_*.js, $(capture)_*.jsx\",\n    \"*.master\": \"$(capture).*.cs, $(capture).*.vb\",\n    \"*.mjs\": \"$(capture).mjs.map, $(capture).*.mjs, $(capture)_*.mjs\",\n    \"*.module.ts\": \"$(capture).resolver.ts, $(capture).controller.ts, $(capture).service.ts\",\n    \"*.pubxml\": \"$(capture).pubxml.user\",\n    \"*.resx\": \"$(capture).*.resx, $(capture).designer.cs, $(capture).designer.vb\",\n    \"*.tex\": \"$(capture).acn, $(capture).acr, $(capture).alg, $(capture).aux, $(capture).bbl, $(capture).blg, $(capture).fdb_latexmk, $(capture).fls, $(capture).glg, $(capture).glo, $(capture).gls, $(capture).idx, $(capture).ind, $(capture).ist, $(capture).lof, $(capture).log, $(capture).lot, $(capture).out, $(capture).pdf, $(capture).synctex.gz, $(capture).toc, $(capture).xdv\",\n    \"*.ts\": \"$(capture).js, $(capture).d.ts.map, $(capture).*.ts, $(capture)_*.js, $(capture)_*.ts\",\n    \"*.tsx\": \"$(capture).ts, $(capture).*.tsx, $(capture)_*.ts, $(capture)_*.tsx\",\n    \"*.vbproj\": \"*.config, *proj.user, appsettings.*, bundleconfig.json\",\n    \"*.vue\": \"$(capture).*.ts, $(capture).*.js, $(capture).story.vue\",\n    \"*.xaml\": \"$(capture).xaml.cs\",\n    \"+layout.svelte\": \"+layout.ts,+layout.ts,+layout.js,+layout.server.ts,+layout.server.js,+layout.gql\",\n    \"+page.svelte\": \"+page.server.ts,+page.server.js,+page.ts,+page.js,+page.gql\",\n    \".clang-tidy\": \".clang-format, .clangd, compile_commands.json\",\n    \".env\": \"*.env, .env.*, .envrc, env.d.ts\",\n    \".gitignore\": \".gitattributes, .gitmodules, .gitmessage, .mailmap, .git-blame*\",\n    \".project\": \".classpath\",\n    \"//\": \"Last update at 4/29/2023, 2:04:58 PM\",\n    \"BUILD.bazel\": \"*.bzl, *.bazel, *.bazelrc, bazel.rc, .bazelignore, .bazelproject, WORKSPACE\",\n    \"CMakeLists.txt\": \"*.cmake, *.cmake.in, .cmake-format.yaml, CMakePresets.json\",\n    \"I*.cs\": \"$(capture).cs\",\n    \"artisan\": \"*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, server.php, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, webpack.mix.js, windi.config.*\",\n    \"astro.config.*\": \"*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*\",\n    \"cargo.toml\": \".clippy.toml, .rustfmt.toml, cargo.lock, clippy.toml, cross.toml, rust-toolchain.toml, rustfmt.toml\",\n    \"composer.json\": \".php*.cache, composer.lock, phpunit.xml*, psalm*.xml\",\n    \"default.nix\": \"shell.nix\",\n    \"deno.json*\": \"*.env, .env.*, .envrc, api-extractor.json, deno.lock, env.d.ts, import-map.json, import_map.json, jsconfig.*, tsconfig.*, tsdoc.*\",\n    \"dockerfile\": \".dockerignore, docker-compose.*, dockerfile*\",\n    \"flake.nix\": \"flake.lock\",\n    \"gatsby-config.*\": \"*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, gatsby-browser.*, gatsby-node.*, gatsby-ssr.*, gatsby-transformer.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*\",\n    \"gemfile\": \".ruby-version, gemfile.lock\",\n    \"go.mod\": \".air*, go.sum\",\n    \"go.work\": \"go.work.sum\",\n    \"mix.exs\": \".credo.exs, .dialyzer_ignore.exs, .formatter.exs, .iex.exs, .tool-versions, mix.lock\",\n    \"next.config.*\": \"*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, next-env.d.ts, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*\",\n    \"nuxt.config.*\": \"*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*\",\n    \"package.json\": \".browserslist*, .circleci*, .commitlint*, .cz-config.js, .czrc, .dlint.json, .dprint.json, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitpod*, .huskyrc*, .jslint*, .lintstagedrc*, .markdownlint*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .releaserc*, .sentry*, .simple-git-hooks*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, apollo.config.*, appveyor*, azure-pipelines*, bower.json, build.config.*, commitlint*, crowdin*, dangerfile*, dlint.json, dprint.json, eslint*, firebase.json, grunt*, gulp*, jenkins*, lerna*, lint-staged*, nest-cli.*, netlify*, nodemon*, npm-shrinkwrap.json, nx.*, package-lock.json, package.nls*.json, phpcs.xml, pm2.*, pnpm*, prettier*, pullapprove*, pyrightconfig.json, release-tasks.sh, release.config.*, renovate*, rollup.config.*, rspack*, simple-git-hooks*, stylelint*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, webpack*, workspace.json, xo.config.*, yarn*\",\n    \"pubspec.yaml\": \".metadata, .packages, all_lint_rules.yaml, analysis_options.yaml, build.yaml, pubspec.lock, pubspec_overrides.yaml\",\n    \"pyproject.toml\": \".pdm.toml, pdm.lock, pyproject.toml\",\n    \"quasar.conf.js\": \"*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, quasar.extensions.json, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*\",\n    \"readme*\": \"authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying, credits, governance.md, history.md, license*, maintainers, readme*, security.md, sponsors*\",\n    \"remix.config.*\": \"*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, remix.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*\",\n    \"rush.json\": \".browserslist*, .circleci*, .commitlint*, .cz-config.js, .czrc, .dlint.json, .dprint.json, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitpod*, .huskyrc*, .jslint*, .lintstagedrc*, .markdownlint*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .releaserc*, .sentry*, .simple-git-hooks*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, apollo.config.*, appveyor*, azure-pipelines*, bower.json, build.config.*, commitlint*, crowdin*, dangerfile*, dlint.json, dprint.json, eslint*, firebase.json, grunt*, gulp*, jenkins*, lerna*, lint-staged*, nest-cli.*, netlify*, nodemon*, npm-shrinkwrap.json, nx.*, package-lock.json, package.nls*.json, phpcs.xml, pm2.*, pnpm*, prettier*, pullapprove*, pyrightconfig.json, release-tasks.sh, release.config.*, renovate*, rollup.config.*, rspack*, simple-git-hooks*, stylelint*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, webpack*, workspace.json, xo.config.*, yarn*\",\n    \"shims.d.ts\": \"*.d.ts\",\n    \"svelte.config.*\": \"*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, houdini.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, mdsvex.config.js, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vite.config.*, vitest.config.*, webpack.config.*, windi.config.*\",\n    \"vite.config.*\": \"*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*\",\n    \"vue.config.*\": \"*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*\"\n  },\n}\n```\n\n[Warp](https://www.warp.dev/)\n\n[Docker](https://www.docker.com/)\n\n[Immersive Translate](appstroe)\n\n[Notion](https://www.notion.so/)\n\n\n## HomeBrew \n\n```bash\n/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\" # HomeBrew 官方的没有bug 去安装所谓国内镜像 git curl 之类的 会被提示 not found \n\nbrew install git \nbrew install curl \nbrew install openssl \nbrew intall node \nnpm i nrm \nnrm use taobao # npm设置淘宝镜像\nnpm i pnpm # pnpm \n\nbrew install yarn \nyarn global add yrm\nyrm use taobao # yarn 设置淘宝镜像\n```\n\n## Oh-my-zsh\n\n> 来自于[antfu 的.zshrc配置](https://github.com/antfu/dotfiles/blob/main/.zshrc)\n\n```bash\nsh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\n```\n\n```bash\n# git clone https://github.com/denysdovhan/spaceship-prompt.git \"$ZSH_CUSTOM/themes/spaceship-prompt\" --depth=1\n# ln -s \"$ZSH_CUSTOM/themes/spaceship-prompt/spaceship.zsh-theme\" \"$ZSH_CUSTOM/themes/spaceship.zsh-theme\"\nZSH_THEME=\"spaceship\"\n\n# git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions\n# git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting\n# git clone https://github.com/agkozak/zsh-z $ZSH_CUSTOM/plugins/zsh-z\nplugins=(\n  git\n  zsh-autosuggestions\n  zsh-syntax-highlighting\n  zsh-z\n)\n\n# https://ohmyz.sh/\nsource $ZSH/oh-my-zsh.sh\n\n# -------------------------------- #\n# Node Package Manager\n# -------------------------------- #\n# https://github.com/antfu/ni\n\nalias nio=\"ni --prefer-offline\"\nalias s=\"nr start\"\nalias d=\"nr dev\"\nalias b=\"nr build\"\nalias bw=\"nr build --watch\"\nalias t=\"nr test\"\nalias tu=\"nr test -u\"\nalias tw=\"nr test --watch\"\nalias w=\"nr watch\"\nalias p=\"nr play\"\nalias c=\"nr typecheck\"\nalias lint=\"nr lint\"\nalias lintf=\"nr lint --fix\"\nalias release=\"nr release\"\nalias re=\"nr release\"\n\n# -------------------------------- #\n# Git\n# -------------------------------- #\n\n# Use github/hub\nalias git=hub\n\n# Go to project root\nalias grt='cd \"$(git rev-parse --show-toplevel)\"'\n\nalias gs='git status'\nalias gp='git push'\nalias gpf='git push --force'\nalias gpft='git push --follow-tags'\nalias gpl='git pull --rebase'\nalias gcl='git clone'\nalias gst='git stash'\nalias grm='git rm'\nalias gmv='git mv'\n\nalias main='git checkout main'\n\nalias gco='git checkout'\nalias gcob='git checkout -b'\n\nalias gb='git branch'\nalias gbd='git branch -d'\n\nalias grb='git rebase'\nalias grbom='git rebase origin/master'\nalias grbc='git rebase --continue'\n\nalias gl='git log'\nalias glo='git log --oneline --graph'\n\nalias grh='git reset HEAD'\nalias grh1='git reset HEAD~1'\n\nalias ga='git add'\nalias gA='git add -A'\n\nalias gc='git commit'\nalias gcm='git commit -m'\nalias gca='git commit -a'\nalias gcam='git add -A && git commit -m'\nalias gfrb='git fetch origin && git rebase origin/master'\n\nalias gxn='git clean -dn'\nalias gx='git clean -df'\n\nalias gsha='git rev-parse HEAD | pbcopy'\n\nalias ghci='gh run list -L 1'\n\nfunction glp() {\n  git --no-pager log -$1\n}\n\nfunction gd() {\n  if [[ -z $1 ]] then\n    git diff --color | diff-so-fancy\n  else\n    git diff --color $1 | diff-so-fancy\n  fi\n}\n\nfunction gdc() {\n  if [[ -z $1 ]] then\n    git diff --color --cached | diff-so-fancy\n  else\n    git diff --color --cached $1 | diff-so-fancy\n  fi\n}\n```\n\n## Git 六行配置\n\n```bash \ngit config --global user.name 你的英文名\ngit config --global user.email 你的邮箱\ngit config --global push.default simple\ngit config --global core.quotepath false\ngit config --global core.editor \"code --wait\"\ngit config --global core.autocrlf input\n```\n\n### SSH key\n\n```bash \nssh-keygen -t rsa -b 4096 -C 你的邮箱\ncat ~/.ssh/id_rsa.pub                           # 得到公钥内容\nssh -T git@github.com\n```\n---\n\n";
						const data = {title:"命令行 install",description:"mac 系统重装之后 要装的东西",pubDate:new Date(1719072000000),heroImage:"/blog-placeholder-2.jpg"};
						const _internal = {
							type: 'content',
							filePath: "/Users/bujack/Desktop/Jack/funny/blue-bar/ab/src/content/blog/mac install.md",
							rawData: undefined,
						};

export { _internal, body, collection, data, id, slug };
